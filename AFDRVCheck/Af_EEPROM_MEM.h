//********************************************************************************
//
//		<< LC898217 Evaluation Soft>>
//		Program Name	: Af_EEPROM_MEM.h
// 		Explanation		: LC898217 EEPROM DATA FORMAT
//		Design			: YS.Kim
//		History			: First edition						2015.07.06 Y.Tashita
//********************************************************************************

/*Filter Calculator Version 4.02*/
/*the time and date : 2015/7/11 17:21:09*/
/*FC filename : SI1331C_150711-2*/
/*fs,23438Hz*/
/*LSI No.,LC898217*/
/*Comment,SI1331C_150710-TEST.fc -6dB*/

/*FILTER equalizer*/
#define	fvGAIN1		0x2d7	/*gain1,001A,-9dB,invert=0*/
#define	fvSING		0x000	/*sing,001C,Cutoff,invert=0*/
#define	fvAG		0x7ff	/*ag,0140,0dB,invert=0*/
#define	fvPG		0x5a9	/*pg,0141,-3dB,invert=0*/
#define	fvIG		0x0e5	/*ig,0143,-19dB,invert=0*/
#define	fvIFC		0x7ff	/*filter_i,0144,DI,-24.0824dB,fs/1,invert=0*/
#define	fvDA		0x74d	/*filter_d,0148,HBF,30Hz,750Hz,0dB,fs/1,invert=0*/
#define	fvDB		0x8c3	/*filter_d,0149,HBF,30Hz,750Hz,0dB,fs/1,invert=0*/
#define	fvDC		0x689	/*filter_d,014B,HBF,30Hz,750Hz,0dB,fs/1,invert=0*/
#define	fvDG		0x403	/*dg,014C,-6dB,invert=0*/
#define	fvSFTX1		0x68	/*SFTX1,014E,12dB*/
#define	fvSFTX2		0x60	/*SFTX2,014F,18dB*/
#define	fvBRKG		0x000	/*brkg,0150,Cutoff,invert=0*/
#define	fvKICKG		0x000	/*kickg,0151,Cutoff,invert=0*/
#define	fvOFC		0x18e	/*filter_o,0153,LPF,1800Hz,0dB,fs/1,invert=0*/


// Define For EEPROM Data
#define	fvGAIN1H	( unsigned char )( fvGAIN1 >> 4 )
#define	fvGAIN1L	( unsigned char )( ( fvGAIN1 & 0x00F ) << 4 )
#define	fvAGH		( unsigned char )( fvAG >> 4 )
#define	fvAGPG		( unsigned char )( ( ( fvAG & 0x00F ) << 4 ) | ( fvPG >> 8 ) )
#define	fvPGL		( unsigned char )( fvPG & 0x0FF )
#define	fvIGH		( unsigned char )( fvIG >> 4 )
#define	fvIGIFC		( unsigned char )( ( ( fvIG & 0x00F ) << 4 ) | ( fvIFC >> 8 ) )
#define	fvIFCL		( unsigned char )( fvIFC & 0x0FF )
#define	fvDAH		( unsigned char )( fvDA >> 4 )
#define	fvDADB		( unsigned char )( ( ( fvDA & 0x00F ) << 4 ) | ( fvDB >> 8 ) )
#define	fvDBL		( unsigned char )( fvDB & 0x0FF )
#define	fvDCH		( unsigned char )( fvDC >> 4 )
#define	fvDCDG		( unsigned char )( ( ( fvDC & 0x00F ) << 4 ) | ( fvDG >> 8 ) )
#define	fvDGL		( unsigned char )( fvDG & 0x0FF )
#define	fvBRKGH		( unsigned char )( fvBRKG >> 4 )
#define	fvBRKGKICKG	( unsigned char )( ( ( fvBRKG & 0x00F ) << 4 ) | ( fvKICKG >> 8 ) )
#define	fvKICKGL	( unsigned char )( fvKICKG & 0x0FF )
#define	fvOFCH		( unsigned char )( fvOFC >> 4 )
#define	fvOFCL		( unsigned char )( ( fvOFC & 0x00F ) << 4 )

unsigned char	IniSet_Mem[ 8 ][ 16 ]	= {	
	//Initialize Section
	//	0			1			2			3			4			5			6			7			8			9			A			B			C			D			E			F
	{	0x00,		0x55,		0x55,		0x55,		0x00,		0x49,		0x45,		0x20,		0x20,		0xF9,		0x98,		0xA7,		0xF2,		0x00,		0x40,	    0x10,	}	,	//000	100
	{	0x01,		0x36,		0x79,		0x67,		0x02,		0x00,		0x90,		0x40,		0x7F,		0xBF,		0x81,		0x00,		0xFF,		0xFF,		0xFF,		0xFF,		}	,	//010	110
	// Free Area
	{	0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		}	,	//020	120
	{	0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0x36,		0x10,		0xFF,		0xFF,		0x16,		0x03,		0x03,		0x03,		}	,	//030	130
	//Filter Section
	{	0x7F,		0xF5,		0xA9,		0x14,		0x47,	    0xFF,		0x78,		0x74,		0x75,		0x38,		0xDF,		0x67,		0x32,		0x87,		0xC5,    	0x40,	}	,	//040	140
	{	0x00,	    0x00,	    0x00,		0x0C,		0x70,		0x30,		0x08,		0x03,		0x00,		0x0C,		0x02,		0x08,		0xFF,		0x20,		0x00,		0x00,		}	,	//050	150
	{	0x3F,		0xF0,		0x00,		0x40,		0x00,		0x00,		0x00,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		}	,	//060	160
	{	0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0xFF,		0x82,		0x17,		0xAC,		}	,	//070	170
} ;

#ifdef WITHOUT_TEST
unsigned char	Clear_Mem[ 8 ][ 16 ]	= {	
	//Initialize Section
	//	0		1		2		3		4		5		6		7		8		9		A		B		C		D		E		F
	{	0x00,	0xFF,	0xFF,	0xFF,	0xFF,	0x48,	0x88,	0x20,	0x20,	0xC0,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	}	,	//000	100
	{	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	}	,	//010	110
	// Free Area
	{	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	}	,	//020	120
	{	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	}	,	//030	130
	//Filter Section
	{	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	}	,	//040	140
	{	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	}	,	//050	150
	{	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	}	,	//060	160
	{	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0x82,	0x17,	0xAC,	}	,	//070	170
} ;
#endif
